datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  bookings     Booking[]
  createdAt    DateTime  @default(now())
  email        String?
  firstName    String?
  id           String    @id @default(cuid())
  lastName     String?
  passwordHash String?
  phoneNumber  String?
  reviews      Review[]
  updatedAt    DateTime  @updatedAt
  username     String?
}

model Hotel {
  address     String?
  city        String?
  country     String?
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  rating      Float?
  reviews     Review[]
  rooms       Room[]
  updatedAt   DateTime @updatedAt
  zipCode     String?
}

model Review {
  comment   String?
  createdAt DateTime @default(now())
  hotel     Hotel?   @relation(fields: [hotelId], references: [id])
  hotelId   String?
  id        String   @id @default(cuid())
  rating    Float?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Room {
  availability Boolean?
  bookings     Booking[]
  createdAt    DateTime           @default(now())
  hotel        Hotel?             @relation(fields: [hotelId], references: [id])
  hotelId      String?
  id           String             @id @default(cuid())
  numberField  String?
  price        Float?
  typeField    EnumRoomTypeField?
  updatedAt    DateTime           @updatedAt
}

model Booking {
  checkInDate  DateTime?
  checkOutDate DateTime?
  createdAt    DateTime  @default(now())
  id           String    @id @default(cuid())
  room         Room?     @relation(fields: [roomId], references: [id])
  roomId       String?
  totalPrice   Float?
  updatedAt    DateTime  @updatedAt
  user         User?     @relation(fields: [userId], references: [id])
  userId       String?
}

enum EnumRoomTypeField {
  Option1
}
