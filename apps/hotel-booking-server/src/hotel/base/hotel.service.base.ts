/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Hotel as PrismaHotel } from "@prisma/client";

export class HotelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HotelCountArgs, "select">): Promise<number> {
    return this.prisma.hotel.count(args);
  }

  async hotels<T extends Prisma.HotelFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelFindManyArgs>
  ): Promise<PrismaHotel[]> {
    return this.prisma.hotel.findMany<Prisma.HotelFindManyArgs>(args);
  }
  async hotel<T extends Prisma.HotelFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelFindUniqueArgs>
  ): Promise<PrismaHotel | null> {
    return this.prisma.hotel.findUnique(args);
  }
  async createHotel<T extends Prisma.HotelCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelCreateArgs>
  ): Promise<PrismaHotel> {
    return this.prisma.hotel.create<T>(args);
  }
  async updateHotel<T extends Prisma.HotelUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelUpdateArgs>
  ): Promise<PrismaHotel> {
    return this.prisma.hotel.update<T>(args);
  }
  async deleteHotel<T extends Prisma.HotelDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelDeleteArgs>
  ): Promise<PrismaHotel> {
    return this.prisma.hotel.delete(args);
  }
}
